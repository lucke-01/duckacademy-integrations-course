scalar LocalDateTime
directive @uppercase on FIELD_DEFINITION
enum Category {
    PUBLIC
    PRIVATE
}
type Author {
    id: ID!
    name: String @uppercase
    birthDate: LocalDateTime
    posts: [Post]
}
type Post {
    id: ID!
    title: String!
    text: String!
    category: Category
    author: Author
}
input AuthorInput {
    id: ID!
    name: String
}
# query root
type Query {
    posts: [Post!]!
    recentPosts(count: Int!, offset: Int!): [Post!]!
    findPostById(id: ID!): Post
    authors: [Author]
}
# mutation root
type Mutation {
    createPost(id: String!, title: String, text: String, category: Category): Post!
    createAuthor(author: AuthorInput, birthDate: LocalDateTime): Author!
}
# subscription root
type Subscription {
    fetchPosts: Post
}